openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:4000
    description: Generated server url
paths:
  /projects:
    get:
      tags:
        - project-controller
      operationId: getAllProjects
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProjectListResponse"
    put:
      tags:
        - project-controller
      operationId: updateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - project-controller
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /applications:
    put:
      tags:
        - application-controller
      operationId: acceptApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - application-controller
      operationId: addApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - application-controller
      operationId: denyApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /users:
    post:
      tags:
        - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /messages:
    post:
      tags:
        - message-controller
      operationId: createMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /users/{userId}:
    get:
      tags:
        - user-controller
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /projects/{projectId}:
    get:
      tags:
        - project-controller
      operationId: getProject
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /messages/{projectId}:
    get:
      tags:
        - message-controller
      operationId: getAllMessages
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /projects/leaveProject:
    delete:
      tags:
        - project-controller
      operationId: leaveProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    ProjectRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        category:
          type: string
        websiteUrl:
          type: string
        status:
          type: string
        neededSkill:
          type: string
        tag:
          type: string
    ApplicationRequest:
      type: object
      properties:
        projectId:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        applicationId:
          type: integer
          format: int32
        message:
          type: string
    Application:
      type: object
      properties:
        id:
          type: integer
          format: int32
        motivationalLetter:
          type: string
    Message:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        message:
          type: string
    Project:
      required:
        - title
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        category:
          type: string
        websiteUrl:
          type: string
        status:
          type: string
        neededSkills:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        messageBoard:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        applications:
          type: array
          items:
            $ref: "#/components/schemas/Application"
        collaborators:
          type: array
          items:
            $ref: "#/components/schemas/User"
        visitors:
          type: array
          items:
            $ref: "#/components/schemas/User"
        contributors:
          type: array
          items:
            $ref: "#/components/schemas/User"
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          enum:
            - ROLE_USER
            - ROLE_MODERATOR
            - ROLE_ADMIN
    User:
      required:
        - email
        - password
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        email:
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
        description:
          type: string
        hidden:
          type: boolean
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        skills:
          type: array
          items:
            type: string
        ownedProjects:
          type: array
          items:
            $ref: "#/components/schemas/Project"
        applications:
          type: array
          items:
            $ref: "#/components/schemas/Application"
        collaborationProjects:
          type: array
          items:
            $ref: "#/components/schemas/Project"
        visitedProjects:
          type: array
          items:
            $ref: "#/components/schemas/Project"
        contributedProjects:
          type: array
          items:
            $ref: "#/components/schemas/Project"
    MessageRequest:
      type: object
      properties:
        projectId:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        message:
          type: string
    ProjectListResponse:
      type: object
      properties:
        status:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/Project"
